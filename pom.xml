<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.xpressosystems</groupId>
	<artifactId>XpressCashDrawer</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>XpressCashDrawer</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<slf4j.version>1.5.10</slf4j.version>
		<logback.version>0.9.15</logback.version>
		<junit.version>4.8.1</junit.version>		
		<maven.build.timestamp.format>yyyy/MM/dd_HH:mm</maven.build.timestamp.format>
		<maven_build_timestamp>${maven.build.timestamp}</maven_build_timestamp>
		<staging.dir>${project.build.directory}/staging</staging.dir>
		<izpack-standalone.version>4.3.1</izpack-standalone.version>

	</properties>
    <!--
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <compress/>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>com.tracktopell.testbluecovemaven.SendBytesToDevice</mainClass>
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

        <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
                <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>com.tracktopell.testbluecovemaven.SendBytesToDevice</mainClass>
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                </archive>
                <descriptorRefs>
                    <descriptorRef>jar-with-dependencies</descriptorRef>
                </descriptorRefs>
            </configuration>
        </plugin>
				  
		</plugins>
	</build>
	-->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<!-- Derby database -->

		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.7.1.1</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
            
		<dependency>
			<groupId>net.sf.bluecove</groupId>
			<artifactId>bluecove</artifactId>
			<!--        Win7_64
						<version>2.1.1-SNAPSHOT</version>
			-->
			<version>2.1.0</version>
		</dependency>

		<!-- If you plan to run application on Linux -->
		<dependency>
			<groupId>net.sf.bluecove</groupId>
			<artifactId>bluecove-gpl</artifactId>
			<!--        Win7_64
						<version>2.1.1-SNAPSHOT</version>
			-->
			<version>2.1.0</version>
			<scope>runtime</scope>
		</dependency>
		
	</dependencies>
	<profiles>		
		
		<profile>
			<id>preprod</id>

			<properties>
				<running_mode>production</running_mode>
			</properties>            
            
			<build>
                
				<finalName>${project.name}</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>2.3.2</version>
						<configuration>
							<source>1.6</source>
							<target>1.6</target>
							<encoding>${project.build.sourceEncoding}</encoding>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>2.4</version>
						<configuration>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>com.xpressosystems.xpresscashdrawer.Main</mainClass>
									<classpathPrefix>dependency-jars/</classpathPrefix>
								</manifest>
							</archive>
						</configuration>
					</plugin>
 
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.5.1</version>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${staging.dir}/dependency-jars/</outputDirectory>
								</configuration>
							</execution>							
						</executions>
						
					</plugin>
										
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<executions>
                            							
							<execution>
								<id>clean-my-dirty-space</id>
								<phase>post-clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo message="======================= clean-my-dirty-space, in post-clean phase ==============>>>"/>
										<!--
										<delete>
											<fileset dir="${basedir}" includes=""/>
										</delete>
										-->
									</tasks>
								</configuration>
							</execution>
							
							<execution>
								<id>create-staging-area</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								
								<configuration>
									<tasks>
										<echo message="======================= create-staging-area, in process-resources phase ==============>>>"/>
										<copy todir="${staging.dir}">
											<fileset dir="${basedir}/src/izpack" />
										</copy>
										<copy todir="${staging.dir}/Productos">
											<fileset dir="${basedir}/Productos" />
										</copy>
									</tasks>
								</configuration>
							</execution>
							<execution>
								<id>preprare-bins-installer</id>
								<phase>verify</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo message="======================= preprare-bins-installer , in verify phase, basedir=${basedir}, create ZIP for UPDATE ==============>>>"/>
										<zip destfile="${project.build.directory}/UPDATE_BUILD.zip">
											<zipfileset dir="${staging.dir}/dependency-jars"	prefix="dependency-jars/"	 includes="*.jar"/>
											<zipfileset dir="${staging.dir}/"					includes="run*.*"/>
											<zipfileset dir="${staging.dir}/../"				includes="XpressCashDrawer.jar"/>
										</zip>
									</tasks>
								</configuration>
							</execution>

						</executions>
					</plugin>
					
 					<plugin>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-maven-plugin</artifactId>
						<version>1.0-alpha-5</version>
						<dependencies>
							<dependency>
								<groupId>org.codehaus.izpack</groupId>
								<artifactId>izpack-standalone-compiler</artifactId>
								<version>${izpack-standalone.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<izpackBasedir>${staging.dir}</izpackBasedir>
							<customPanelDirectory>${staging.dir}</customPanelDirectory>
						</configuration>
						<executions>
							<execution>
								<id>standard-installer</id>
								<phase>package</phase>
								<goals>
									<goal>izpack</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
				
			</build>
		</profile>

	</profiles>
	
</project>
